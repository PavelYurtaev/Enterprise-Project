UserStories

1. В системе можно зарегистрироваться как Emloyee, Manager, Customer и Admin.
2. Зарегистрированный заказчик(Customer) оформляет заказ(Order) на разработку ПО, который распределяется менеджером по сотрудниками-разработчикам(Employee). За логику оформления заказа отвечает класс OrderService.
3. Заказ может выполняться одним или несколькими разработчиками. 
4. Разработчик выполняя заказ будет фиксировать его прогресс в определенный момент цикла разработки, используя ProjectTrackingService.
5. Заказчику будут доступны в личном кабинете данные из ProjectTrakingService, но только касающиеся его заказов.
6. Заказчик имеет возможность обмениваться сообщениями только с менеджером, а разработчики, менеджеры и администратор могут обмениваться сообщениями между собой в любом сочетании. 
7. По выполнению заказа сотрудник сообщает менеджеру, а тот сдает его заказчику. Заказчик подтверждает выполнение.
8. Проекты в своем жизненном цикле могут содержать несколько заказов.
Например: первый заказ был - создать проект с 10 фичами. Спустя какое-то время тот же заказчик оформляет ещё один заказ на добавление еще 5 фич в этот же проект.
9. Проекты и заказы будут иметь свой внутренний статус (не для заказчика).
10. Администратор будет иметь прямой доступ к операциям над базой данных всех участников процесса, заказам, проектам, новостям, логам.
11. Под аккаунтом менеджера публикуются новости компании, статьи, презентации выполненных проектов.
12. Разделы "Об организации", "Услуги", "Контакты" будут оформлены, как статичные HTML страницы.
13. В личном кабинете у сотрудника он делает отметки о работе, пишет description на них. (за это отвечает класс ProjectTrackingService).
Будет видеть историю проекта. Чат с коллегами.
14. В личном кабинете менеджера будет, допустим "Подтвердить прогресс", и только после этого заказчик уже в своём личном кабинете будет видеть эту отметку. Так же у менеджера: функционал по публикации контента, список сотрудников, кому он может поручить выполнение заказа. Функционал передачи заказа в разработку. Наём сотрудников(просто оформляет Employee и тот попадает в его список доступных сотрудников) 
15. В личном кабинете у заказчика будет виден прогресс разработки, функционал оформления заказа, чат с менеджером, функционал подтверждения выполнения заказа.
16 В личном кабинете у администратора будет функционал с ручным доступов к базе данных